version: 2.1

# Define orbs for easier configuration
orbs:
  node: circleci/node@5.1.0

# Define executors
executors:
  node-executor:
    docker:
      - image: cimg/node:18.17.0
    working_directory: ~/project

# Define jobs
jobs:
  # Install dependencies and cache them
  install-dependencies:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          cache-version: v1
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - package-lock.json

  # Run linting and type checking
  lint-and-typecheck:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run ESLint
          command: npm run lint
      - run:
          name: Run TypeScript type checking
          command: npm run type-check

  # Run tests
  test:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Run tests
          command: npm test

  # Build the application
  build:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Build application
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist

  # Deploy to Netlify
  deploy-netlify:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Install Netlify CLI
          command: npm install -g netlify-cli
      - run:
          name: Deploy to Netlify
          command: |
            if [ "${CIRCLE_BRANCH}" = "main" ]; then
              # Production deployment
              netlify deploy --prod --dir=dist --site=$NETLIFY_SITE_ID --auth=$NETLIFY_AUTH_TOKEN
            else
              # Preview deployment
              netlify deploy --dir=dist --site=$NETLIFY_SITE_ID --auth=$NETLIFY_AUTH_TOKEN
            fi

  # Deploy to production (alternative deployment option)
  deploy-production:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy to Production
          command: |
            echo "üöÄ Deploying Pizzeria Senza Cipolla to production..."
            echo "üì¶ Build artifacts ready in dist/ folder"
            echo "üåê Deployment target: Production environment"
            # Add your production deployment commands here
            # For example: rsync, scp, or other deployment methods

# Define workflows
workflows:
  version: 2
  
  # Main workflow for all branches
  build-test-deploy:
    jobs:
      - install-dependencies
      
      - lint-and-typecheck:
          requires:
            - install-dependencies
            
      - test:
          requires:
            - install-dependencies
            
      - build:
          requires:
            - install-dependencies
            - lint-and-typecheck
            - test
            
      # Deploy to Netlify on main branch
      - deploy-netlify:
          requires:
            - build
          filters:
            branches:
              only: 
                - main
                - develop
          context:
            - netlify-deployment
            
      # Alternative production deployment
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: main
          context:
            - production-deployment
          # Require manual approval for production
          type: approval

  # Nightly build workflow
  nightly-build:
    triggers:
      - schedule:
          cron: "0 2 * * *"  # Run at 2 AM UTC daily
          filters:
            branches:
              only: main
    jobs:
      - install-dependencies
      - build:
          requires:
            - install-dependencies
